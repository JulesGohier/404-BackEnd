name: 🚀 Deploy production to VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "APP_ENV=production" > .env
          echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$|^https?://.*\.404-snf\.fr\$'" >> .env

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: 🔨 Build Docker image
        run: |
          docker build -t api_404-snf_i -f Dockerfile.yml .

      - name: 💾 Save Docker image
        run: |
          docker save api_404-snf_i -o api_404-snf_i.tar

      - name: 🚧 Fix file permissions
        run: chmod 644 api_404-snf_i.tar

      - name: 🚐 Transfer image to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: api_404-snf_i.tar
          target: /${{ secrets.VPS_USER }}/

      - name: 🚀 Deploy on VPS
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker load -i /${{ secrets.VPS_USER }}/api_404-snf_i.tar
            docker stop api_404-snf_c || true
            docker rm api_404-snf_c || true
            docker run -d --name api_404-snf_c -p 3400:8000 api_404-snf_i
